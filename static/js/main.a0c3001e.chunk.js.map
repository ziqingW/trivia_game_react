{"version":3,"sources":["store/api/index.js","store/api/loadQuiz.js","store/actions.js","store/sagas/Quiz.js","store/sagas/ApiErrors.js","store/sagas/index.js","store/reducers/Quiz.js","components/SingleQuiz.js","components/Main.js","components/Welcome.js","components/Game.js","App.js","store/index.js","serviceWorker.js","index.js"],"names":["api","loadQuiz","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","category","difficulty","amount","response","json","wrap","_context","prev","next","fetch","concat","sent","response_code","abrupt","error","code","status","data","stop","_x","_x2","_x3","apply","this","arguments","LOAD_QUIZ","API_ERROR","QUIZ_DATA_RECEIVED","watchLoadQuiz","watchAppLoad","action","call","API","put","type","actions","cancel","_marked","_context2","all","takeEvery","_marked2","Quiz","apiErrorReceived","watchApiError","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","ApiErrors_marked","ApiErrors_marked2","ApiErrors","sagas","toConsumableArray","QuizSagas","initialState","visibleItem","end","result","start","handlers","_handlers","defineProperty","state","objectSpread","reducers_Quiz","length","undefined","handler","SingleQuiz","handleChange","answer","_this","props","correct_answer","addResults","selectSingleQuiz","_this2","_this$props","classes","answers","question","index","Math","floor","random","assign","incorrect_answers","splice","react_default","createElement","index_es","container","direction","justify","alignItems","spacing","style","minHeight","className","card","dangerouslySetInnerHTML","__html","map","j","option","key","onClick","Component","withStyles","maxWidth","backgroundColor","&:hover","cursor","filter","padding","fontWeight","color","borderRadius","connect","dispatch","Main","subtitle","variant","gutterBottom","parseInt","subtitle2","replay","button","components_SingleQuiz","minWidth","fontSize","textAlign","marginTop","textShadow","boxShadow","ownProps","_state$quiz","quiz","Welcome","classCallCheck","possibleConstructorReturn","getPrototypeOf","e","setState","target","name","value","clickable","prevProps","prevState","title","autoComplete","formControl","htmlFor","formLabel","onChange","inputProps","onSubmit","disabled","marginBottom","Game","components_Main","components_Welcome","store","rootReducer","combineReducers","quizReducer","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","middlewares","applyMiddleware","createStore","forEach","run","App","es","components_Game","lib","React","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a0c3001e.chunk.js","sourcesContent":["import loadQuiz from './loadQuiz'\r\n\r\nexport default {\r\n  loadQuiz\r\n}\r\n","import 'isomorphic-fetch'\r\n\r\nconst loadQuiz = async (category, difficulty, amount) => {\r\n  const response = await fetch(\r\n    `https://opentdb.com/api.php?amount=${amount}&category=${category}&difficulty=${difficulty}`\r\n  )\r\n\r\n  const json = await response.json()\r\n  if (json.response_code) {\r\n    return {\r\n      error: {\r\n        code: response.status\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    data: json['results']\r\n  }\r\n}\r\n\r\nexport default loadQuiz\r\n","export const LOAD_QUIZ = \"COMMAND/LOAD_QUIZ\"\r\nexport const API_ERROR = \"EVENT/API_ERROR_RECEIVED\"\r\nexport const QUIZ_DATA_RECEIVED = \"EVENT/QUIZ_DATA_RECEIVED\"\r\nexport const SELECT_SINGLE_QUIZ = \"EVENT/SELECT_SINGLE_QUIZ\"\r\nexport const ADD_RESULTS = \"EVENT/ADD_RESULTS\"\r\nexport const REPLAY_GAME = \"EVENT/REPLAY_GAME\"\r\n","import {\r\n  takeEvery,\r\n  call,\r\n  put,\r\n  cancel,\r\n  all\r\n} from 'redux-saga/effects'\r\nimport API from '../api'\r\nimport * as actions from '../actions'\r\n\r\nfunction* watchLoadQuiz(action) {\r\n  const {\r\n    category,\r\n    difficulty,\r\n    amount\r\n  } = action\r\n  const {\r\n    error,\r\n    data\r\n  } = yield call(\r\n    API.loadQuiz,\r\n    category,\r\n    difficulty,\r\n    amount\r\n  )\r\n  if (error) {\r\n    yield put({\r\n      type: actions.API_ERROR,\r\n      code: error.code\r\n    })\r\n    yield cancel()\r\n    return\r\n  }\r\n  yield put({\r\n    type: actions.QUIZ_DATA_RECEIVED,\r\n    data\r\n  })\r\n}\r\n\r\nfunction* watchAppLoad() {\r\n  yield all([\r\n    takeEvery(actions.LOAD_QUIZ, watchLoadQuiz)\r\n  ])\r\n}\r\n\r\nexport default [watchAppLoad]\r\n","import {\r\n  takeEvery,\r\n  call\r\n} from 'redux-saga/effects'\r\nimport * as actions from '../actions'\r\nimport {\r\n  toast\r\n} from 'react-toastify'\r\n\r\nfunction* apiErrorReceived(action) {\r\n  yield call(toast.error,\r\n    'Option unavailable, change numbers !', {\r\n      position: \"top-center\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true\r\n    })\r\n}\r\n\r\nfunction* watchApiError() {\r\n  yield takeEvery(actions.API_ERROR, apiErrorReceived)\r\n}\r\n\r\nexport default [watchApiError]\r\n","import QuizSagas from './Quiz'\r\nimport ApiErrors from './ApiErrors'\r\nexport default [...ApiErrors, ...QuizSagas]\r\n","import * as actions from '../actions'\r\n\r\nconst initialState = {\r\n  data: [],\r\n  visibleItem: 0,\r\n  end: false,\r\n  result: 0,\r\n  start: false,\r\n  amount: 10\r\n}\r\n\r\nconst startLoading = (state, action) => {\r\n  return {\r\n    ...state,\r\n    amount: action.amount\r\n  }\r\n}\r\n\r\nconst quizDataReceived = (state, action) => {\r\n  const data = action.data\r\n  return {\r\n    ...state,\r\n    data,\r\n    start: true\r\n  }\r\n}\r\n\r\nconst singleQuizSelected = (state, action) => {\r\n  const visibleItem = state.visibleItem + 1\r\n  if (visibleItem < state.amount) {\r\n    return {\r\n      ...state,\r\n      visibleItem\r\n    }\r\n  } else {\r\n    return {\r\n      ...state,\r\n      end: true\r\n    }\r\n  }\r\n}\r\n\r\nconst calculateResults = (state, action) => {\r\n  const result = state.result + 10\r\n  return {\r\n    ...state,\r\n    result\r\n  }\r\n}\r\n\r\nconst replayGame = (state, action) => {\r\n  return {\r\n    data: [],\r\n    visibleItem: 0,\r\n    end: false,\r\n    result: 0,\r\n    start: false,\r\n    amount: 10\r\n  }\r\n}\r\n\r\nconst handlers = {\r\n  [actions.LOAD_QUIZ]: startLoading,\r\n  [actions.QUIZ_DATA_RECEIVED]: quizDataReceived,\r\n  [actions.SELECT_SINGLE_QUIZ]: singleQuizSelected,\r\n  [actions.ADD_RESULTS]: calculateResults,\r\n  [actions.REPLAY_GAME]: replayGame\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  const handler = handlers[action.type]\r\n  if (typeof handler === \"undefined\") {\r\n    return state\r\n  } else {\r\n    return handler(state, action)\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Grid, withStyles, Card, CardContent} from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../store/actions'\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 400,\r\n    backgroundColor: '#b3e5fc',\r\n  },\r\n  option: {\r\n    '&:hover': {\r\n      cursor: 'pointer',\r\n      filter: 'brightness(110%)'\r\n    },\r\n    backgroundColor: '#eee',\r\n    padding: '0.8em',\r\n    fontWeight: '600',\r\n    color: '#424242',\r\n    borderRadius: '8px'\r\n  }\r\n}\r\n\r\nclass SingleQuiz extends Component {\r\n\r\n  handleChange = answer => {\r\n    if (answer === this.props.correct_answer) {\r\n      this.props.addResults()\r\n    }\r\n      this.props.selectSingleQuiz()\r\n  }\r\n\r\n  render () {\r\n    const {data, classes} = this.props\r\n    const correct_answer = data.correct_answer\r\n    var answers = []\r\n    const question = data.question\r\n    if (data.type === \"boolean\") {\r\n      answers = [\"True\", \"False\"]\r\n      } else {\r\n        const index = Math.floor(Math.random()*3)\r\n        answers = Object.assign(answers, data.incorrect_answers)\r\n        answers.splice(index, 0, correct_answer)\r\n      }\r\n    return (\r\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={0} style={{ minHeight: '80vh' }}>\r\n        <Card className={classes.card}>\r\n          <CardContent>\r\n            <h4 dangerouslySetInnerHTML={{__html: question}}/>\r\n            <Grid container direction=\"column\" justify=\"flex-start\" >\r\n              {answers.map((answer, j) => {\r\n              return (<p className={classes.option} key={j} dangerouslySetInnerHTML={{__html: answer}} onClick={() => this.handleChange(answer)} />)\r\n            })}\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatch = dispatch => ({\r\n  selectSingleQuiz: () => dispatch({\r\n    type: actions.SELECT_SINGLE_QUIZ,\r\n  }),\r\n  addResults: () => dispatch({\r\n    type: actions.ADD_RESULTS,\r\n  })\r\n})\r\n\r\nSingleQuiz = withStyles(styles)(SingleQuiz)\r\nexport default connect(null, mapDispatch)(SingleQuiz)\r\n","import React, { Component } from 'react'\r\nimport {Typography, Card, Grid, withStyles, LinearProgress, Button} from '@material-ui/core'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../store/actions'\r\nimport SingleQuiz from './SingleQuiz'\r\n\r\nconst styles = {\r\n  card: {\r\n    minWidth: 300,\r\n    minHeight: 240,\r\n    backgroundColor: '#03a9f4',\r\n    padding: '1em'\r\n  },\r\n  subtitle: {\r\n    fontSize: '1.2em',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n  },\r\n  subtitle2: {\r\n    fontSize: '2em',\r\n    marginTop: '1.3em',\r\n    color: '#d32f2f',\r\n    textShadow: '1px 1px 1px white',\r\n    textAlign: 'center'\r\n  },\r\n  result: {\r\n    color: '#ffea00',\r\n    fontSize: '1.2em',\r\n    textShadow: '1px 1px 1px black'\r\n  },\r\n  replay: {\r\n    marginTop: '2em',\r\n  },\r\n  button: {\r\n    backgroundColor: '#00e676',\r\n    fontWeight: 'bold',\r\n    boxShadow: '2px 2px 3px black'\r\n  }\r\n}\r\n\r\nclass Main extends Component {\r\n\r\n  render() {\r\n    const {data, visibleItem, end, result, amount, classes} = this.props\r\n      if (!data.length) {return <LinearProgress />}\r\n      else if (!end) {\r\n    return (\r\n    <SingleQuiz data={data[visibleItem]} correct_answer={data[visibleItem].correct_answer}/>\r\n  )\r\n  } else {\r\n  return (\r\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={0} style={{ minHeight: '80vh' }}>\r\n      <Card className={classes.card}>\r\n        <Typography className={classes.subtitle} variant=\"display1\" gutterBottom>Your've made <span className={classes.result}>{parseInt(result*100/(amount*10))}%</span> Correct !</Typography>\r\n        <Typography variant=\"display1\" gutterBottom className={classes.subtitle2}>Play it again ?</Typography>\r\n        <Grid container justify='center' className={classes.replay}>\r\n          <Button variant=\"contained\" className={classes.button} onClick={this.props.replay}>Yes</Button>\r\n        </Grid>\r\n      </Card>\r\n    </Grid>\r\n    )\r\n  }\r\n  }\r\n}\r\n\r\nconst mapState = (state, ownProps) => {\r\n  const {data, visibleItem, end, result, amount} = state.quiz\r\n  return {\r\n    data,\r\n    visibleItem,\r\n    end,\r\n    result,\r\n    amount\r\n  }\r\n}\r\n\r\nconst mapDispatch = dispatch => ({\r\n  replay: () => dispatch({\r\n    type: actions.REPLAY_GAME,\r\n  })\r\n})\r\n\r\nMain = withStyles(styles)(Main)\r\nexport default connect(mapState, mapDispatch)(Main)\r\n","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {Typography, Card, CardHeader, CardContent, withStyles, Button, Grid, Select, MenuItem, InputLabel, FormControl} from '@material-ui/core'\r\nimport * as actions from '../store/actions'\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 400,\r\n    backgroundColor: '#03a9f4',\r\n  },\r\n  subtitle: {\r\n    fontSize: '1.2em',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    textShadow: '1px 1px 1px black'\r\n  },\r\n  formLabel: {\r\n    color: 'white'\r\n  },\r\n  formControl: {\r\n    marginBottom: '0.8em'\r\n  }\r\n}\r\n\r\nclass Welcome extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      category: \"\",\r\n      difficulty: \"\",\r\n      amount: 10,\r\n      clickable: false\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.category !== this.state.category || prevState.difficulty !== this.state.difficulty) {\r\n    if (this.state.category && this.state.difficulty) {\r\n      this.setState({\r\n        clickable: true\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { classes } = this.props\r\n    return (\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={0} style={{ minHeight: '80vh' }}>\r\n          <Card className={classes.card}>\r\n            <CardHeader title=\"Welcome to the Trivia Game\" />\r\n              <CardContent>\r\n                <Typography className={classes.subtitle} variant=\"display1\" gutterBottom>Set up your game</Typography>\r\n                  <br />\r\n                <form autoComplete=\"off\" >\r\n                  <Grid container direction=\"column\" justify=\"center\" spacing={8}>\r\n                    <FormControl className={classes.formControl}>\r\n                      <InputLabel htmlFor=\"category\" className={classes.formLabel}>Category</InputLabel>\r\n                        <Select\r\n                          value={this.state.category}\r\n                          onChange={this.handleChange}\r\n                          inputProps={{\r\n                            name: 'category',\r\n                          }}\r\n                        >\r\n                          <MenuItem value=\"\">{\"\"}</MenuItem>\r\n                          <MenuItem value={9}>General Knowledge</MenuItem>\r\n                          <MenuItem value={10}>Entertainment: Books</MenuItem>\r\n                          <MenuItem value={11}>Entertainment: Film</MenuItem>\r\n                          <MenuItem value={12}>Entertainment: Music</MenuItem>\r\n                          <MenuItem value={14}>Entertainment: Television</MenuItem>\r\n                          <MenuItem value={15}>Entertainment: Video Games</MenuItem>\r\n                          <MenuItem value={16}>Entertainment: Board Games</MenuItem>\r\n                          <MenuItem value={17}>Science & Nature</MenuItem>\r\n                          <MenuItem value={18}>Science: Computers</MenuItem>\r\n                          <MenuItem value={19}>Science: Mathematics</MenuItem>\r\n                          <MenuItem value={20}>Mythology</MenuItem>\r\n                          <MenuItem value={21}>Sports</MenuItem>\r\n                          <MenuItem value={22}>Geography</MenuItem>\r\n                          <MenuItem value={23}>History</MenuItem>\r\n                          <MenuItem value={24}>Politics</MenuItem>\r\n                          <MenuItem value={26}>Celebrities</MenuItem>\r\n                          <MenuItem value={27}>Animals</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"difficulty\" className={classes.formLabel}>Difficulty</InputLabel>\r\n                <Select\r\n                  value={this.state.difficulty}\r\n                  onChange={this.handleChange}\r\n                  inputProps={{\r\n                    name: 'difficulty',\r\n                  }}\r\n                >\r\n                  <MenuItem value=\"\">{\"\"}</MenuItem>\r\n                  <MenuItem value={\"easy\"}>Easy</MenuItem>\r\n                  <MenuItem value={\"medium\"}>Medium</MenuItem>\r\n                  <MenuItem value={\"hard\"}>Hard</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"amount\" className={classes.formLabel}>Question Numbers</InputLabel>\r\n              <Select\r\n                value={this.state.amount}\r\n                onChange={this.handleChange}\r\n                inputProps={{\r\n                  name: 'amount',\r\n                }}\r\n              >\r\n                <MenuItem value={10}>10</MenuItem>\r\n                <MenuItem value={20}>20</MenuItem>\r\n                <MenuItem value={30}>30</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </form>\r\n        <Grid container justify=\"center\">\r\n          {this.state.clickable? (<Button color=\"secondary\" variant=\"contained\" onClick={() => this.props.onSubmit(this.state.category, this.state.difficulty, this.state.amount)}>OK</Button>) : (<Button color=\"secondary\" variant=\"contained\" disabled>OK</Button>)}\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatch = dispatch => ({\r\n  onSubmit: (category, difficulty, amount) => dispatch({\r\n    type: actions.LOAD_QUIZ,\r\n    category: category,\r\n    difficulty: difficulty,\r\n    amount: amount\r\n  })\r\n})\r\n\r\nWelcome = withStyles(styles)(Welcome)\r\nexport default connect(null, mapDispatch)(Welcome)\r\n","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Main from './Main'\r\nimport Welcome from './Welcome'\r\n\r\nclass Game extends Component {\r\n  render() {\r\n    const {start} = this.props\r\n    if (start) {\r\n      return <Main />\r\n    }\r\n    return <Welcome />\r\n  }\r\n}\r\n\r\nconst mapState = (state, ownProps) => {\r\n  const {start} = state.quiz\r\n  return {\r\n    start\r\n  }\r\n}\r\n\r\nexport default connect(mapState)(Game)\r\n","import React from 'react';\nimport createStore from './store'\nimport { Provider } from 'react-redux'\nimport Game from './components/Game'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst store = createStore()\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Game />\n        <ToastContainer />\n      </Provider>\n    );\n  }\n}\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport sagas from './sagas'\r\nimport quizReducer from './reducers/Quiz'\r\n\r\nexport default () => {\r\n  const rootReducer = combineReducers({\r\n    quiz: quizReducer\r\n  })\r\n\r\n  const composeEnhancers = composeWithDevTools({})\r\n  const sagaMiddleware = createSagaMiddleware()\r\n  const middlewares = applyMiddleware(sagaMiddleware)\r\n  const store = createStore(rootReducer, composeEnhancers(middlewares))\r\n  sagas.forEach(sagaMiddleware.run)\r\n\r\n  return store\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["store/api/index.js","store/api/loadQuiz.js","store/actions.js","store/sagas/Quiz.js","store/sagas/ApiErrors.js","store/sagas/index.js","store/reducers/Quiz.js","components/SingleQuiz.js","components/Summary.js","components/Main.js","components/Welcome.js","components/Game.js","App.js","store/index.js","serviceWorker.js","index.js"],"names":["api","loadQuiz","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","category","difficulty","amount","response","json","wrap","_context","prev","next","fetch","concat","sent","response_code","abrupt","error","code","status","data","stop","_x","_x2","_x3","apply","this","arguments","LOAD_QUIZ","API_ERROR","QUIZ_DATA_RECEIVED","watchLoadQuiz","watchAppLoad","action","call","API","put","type","actions","cancel","_marked","_context2","all","takeEvery","_marked2","Quiz","apiErrorReceived","watchApiError","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","ApiErrors_marked","ApiErrors_marked2","ApiErrors","sagas","toConsumableArray","QuizSagas","initialState","visibleItem","end","result","start","corrections","handlers","_handlers","defineProperty","state","objectSpread","reducers_Quiz","length","undefined","handler","SingleQuiz","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleChange","answer","index","correct","correct_answer","setState","currentClicked","toastStyle","success","react_default","createElement","icons_index_es","setBackground","backgroundColor","color","prevProps","prevState","_this2","_this$props","classes","answers","question","assign","all_answers","index_es","container","direction","justify","alignItems","spacing","style","minHeight","className","card","marginTop","dangerouslySetInnerHTML","__html","map","j","option","key","onClick","variant","selectSingleQuiz","Component","withStyles","maxWidth","&:hover","cursor","filter","padding","fontWeight","borderRadius","connect","dispatch","Summary","quiz","i","marker","panel","expandIcon","flexDirection","width","margin","ownProps","_state$quiz","Main","subtitle","gutterBottom","parseInt","subtitle2","replay","button","components_Summary","singleQuiz","Math","floor","random","incorrect_answers","splice","components_SingleQuiz","minWidth","fontSize","textAlign","textShadow","boxShadow","Welcome","e","target","name","value","clickable","title","autoComplete","formControl","htmlFor","formLabel","onChange","inputProps","onSubmit","disabled","marginBottom","Game","components_Main","components_Welcome","store","rootReducer","combineReducers","quizReducer","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","middlewares","applyMiddleware","createStore","forEach","run","App","es","components_Game","lib","React","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2fa84aa7.chunk.js","sourcesContent":["import loadQuiz from './loadQuiz'\n\nexport default {\n  loadQuiz\n}\n","import 'isomorphic-fetch'\n\nconst loadQuiz = async (category, difficulty, amount) => {\n  const response = await fetch(\n    `https://opentdb.com/api.php?amount=${amount}&category=${category}&difficulty=${difficulty}`\n  )\n\n  const json = await response.json()\n  if (json.response_code) {\n    return {\n      error: {\n        code: response.status\n      }\n    }\n  }\n  return {\n    data: json['results']\n  }\n}\n\nexport default loadQuiz\n","export const LOAD_QUIZ = \"COMMAND/LOAD_QUIZ\"\nexport const API_ERROR = \"EVENT/API_ERROR_RECEIVED\"\nexport const QUIZ_DATA_RECEIVED = \"EVENT/QUIZ_DATA_RECEIVED\"\nexport const SELECT_SINGLE_QUIZ = \"EVENT/SELECT_SINGLE_QUIZ\"\nexport const REPLAY_GAME = \"EVENT/REPLAY_GAME\"\n","import {\n  takeEvery,\n  call,\n  put,\n  cancel,\n  all\n} from 'redux-saga/effects'\nimport API from '../api'\nimport * as actions from '../actions'\n\nfunction* watchLoadQuiz(action) {\n  const {\n    category,\n    difficulty,\n    amount\n  } = action\n  const {\n    error,\n    data\n  } = yield call(\n    API.loadQuiz,\n    category,\n    difficulty,\n    amount\n  )\n  if (error) {\n    yield put({\n      type: actions.API_ERROR,\n      code: error.code\n    })\n    yield cancel()\n    return\n  }\n  yield put({\n    type: actions.QUIZ_DATA_RECEIVED,\n    data\n  })\n}\n\nfunction* watchAppLoad() {\n  yield all([\n    takeEvery(actions.LOAD_QUIZ, watchLoadQuiz)\n  ])\n}\n\nexport default [watchAppLoad]\n","import {\n  takeEvery,\n  call\n} from 'redux-saga/effects'\nimport * as actions from '../actions'\nimport {\n  toast\n} from 'react-toastify'\n\nfunction* apiErrorReceived(action) {\n  yield call(toast.error,\n    'Option unavailable, change numbers !', {\n      position: \"top-center\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true\n    })\n}\n\nfunction* watchApiError() {\n  yield takeEvery(actions.API_ERROR, apiErrorReceived)\n}\n\nexport default [watchApiError]\n","import QuizSagas from './Quiz'\nimport ApiErrors from './ApiErrors'\nexport default [...ApiErrors, ...QuizSagas]\n","import * as actions from '../actions'\n\nconst initialState = {\n  data: [],\n  visibleItem: 0,\n  end: false,\n  result: 0,\n  start: false,\n  amount: 10,\n  corrections: {}\n}\n\nconst startLoading = (state, action) => {\n  return {\n    ...state,\n    amount: action.amount\n  }\n}\n\nconst quizDataReceived = (state, action) => {\n  const data = action.data\n  return {\n    ...state,\n    data,\n    start: true\n  }\n}\n\nconst singleQuizSelected = (state, action) => {\n  state.corrections[state.visibleItem] = action.result\n  const visibleItem = state.visibleItem + 1\n  let result = (action.result ? (state.result+10) : (state.result))\n  if (visibleItem < state.amount) {\n    return {\n      ...state,\n      visibleItem,\n      result\n    }\n  } else {\n    return {\n      ...state,\n      result,\n      end: true\n    }\n  }\n}\n\nconst replayGame = (state, action) => {\n  return {\n    data: [],\n    visibleItem: 0,\n    end: false,\n    result: 0,\n    start: false,\n    amount: 10,\n    corrections: {}\n  }\n}\n\nconst handlers = {\n  [actions.LOAD_QUIZ]: startLoading,\n  [actions.QUIZ_DATA_RECEIVED]: quizDataReceived,\n  [actions.SELECT_SINGLE_QUIZ]: singleQuizSelected,\n  [actions.REPLAY_GAME]: replayGame\n}\n\nexport default (state = initialState, action) => {\n  const handler = handlers[action.type]\n  if (typeof handler === \"undefined\") {\n    return state\n  } else {\n    return handler(state, action)\n  }\n}\n","import React, { Component } from 'react'\nimport { toast } from \"react-toastify\"\nimport {Grid, withStyles, Card, CardContent, Button} from '@material-ui/core'\nimport {Check, Close} from '@material-ui/icons'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\n\nconst styles = {\n  card: {\n    maxWidth: 400,\n    backgroundColor: '#b3e5fc',\n  },\n  option: {\n    '&:hover': {\n      cursor: 'pointer',\n      filter: 'brightness(110%)'\n    },\n    backgroundColor: '#eee',\n    padding: '0.8em',\n    fontWeight: '600',\n    color: '#424242',\n    borderRadius: '8px'\n  }\n}\n\nclass SingleQuiz extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      currentClicked: null,\n      correct: null\n    }\n  }\n\n  handleChange = (answer, index) => {\n    const correct = (answer === this.props.correct_answer ? true : false)\n    this.setState({\n      currentClicked: index,\n      correct: correct\n    }, ()=> {\n      const ToastCorrect = () => (\n        <p><Check />It's Correct !</p>\n      )\n      const ToastWrong = () => (\n        <p><Close />It's Incorrect !</p>\n      )\n      const toastStyle = { position: \"top-center\",\n                          autoClose: 1500,\n                          hideProgressBar: true,\n                          closeOnClick: true,\n                          pauseOnHover: false,\n                          draggable: true }\n      if (this.state.correct) {\n      toast.success(<ToastCorrect />, toastStyle)\n    } else {\n      toast.error(<ToastWrong />, toastStyle)\n    }\n  })\n}\n\n  setBackground = (answer, index) => {\n    if (this.state.correct) {\n      if (this.state.currentClicked === index) {\n        return {backgroundColor : \"#4caf50\", color: 'white'}\n      }\n    } else if (this.state.correct === false){\n        if (this.state.currentClicked === index) {\n          return {backgroundColor: \"#ef5350\", color: 'white'}\n        } else {\n          if (answer === this.props.correct_answer) {\n            return {backgroundColor : \"#4caf50\", color: 'white'}\n          }\n        }\n      }\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    if (prevProps.data !== this.props.data) {\n      this.setState({\n        currentClicked: null,\n        correct: null\n      })\n    }\n  }\n\n  render () {\n\n    const {data, classes} = this.props\n    var answers = []\n    const question = data.question\n    if (data.type === \"boolean\") {\n      answers = [\"True\", \"False\"]\n      } else {\n        answers = Object.assign([], data.all_answers)\n      }\n    return (\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={0} style={{ minHeight: '80vh' }}>\n        <Card className={classes.card}>\n          <CardContent>\n            <h4 style={{ marginTop: '3em' }} dangerouslySetInnerHTML={{__html: question}}/>\n            <Grid container direction=\"column\" justify=\"flex-start\" >\n              {answers.map((answer, j) => {\n              return (\n                <p className={classes.option} key={j} style={this.setBackground(answer, j)} dangerouslySetInnerHTML={{__html: answer}} onClick={\n                  this.state.currentClicked === null ? (() => this.handleChange(answer,j)) : (()=>null)} />)\n            })}\n            </Grid>\n            <Grid container justify=\"center\">\n              {this.state.currentClicked !== null ? (<Button color=\"primary\" variant=\"contained\" onClick={() => this.props.selectSingleQuiz(this.state.correct)}>Next</Button>) : null}\n            </Grid>\n          </CardContent>\n        </Card>\n      </Grid>\n    )\n  }\n}\n\nconst mapDispatch = dispatch => ({\n  selectSingleQuiz: result => dispatch({\n    type: actions.SELECT_SINGLE_QUIZ,\n    result: result,\n  }),\n})\n\nSingleQuiz = withStyles(styles)(SingleQuiz)\nexport default connect(null, mapDispatch)(SingleQuiz)\n","import React, {Component} from 'react'\nimport {Grid, withStyles, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails} from '@material-ui/core'\nimport {Check, Close, ExpandMore} from '@material-ui/icons'\nimport {connect} from 'react-redux'\n\n\nconst styles = {\n  panel : {\n    width: \"85%\",\n    backgroundColor: \"#eee\",\n    borderRadius: \"5px\",\n    margin: \"5px\",\n  },\n}\n\nclass Summary extends Component {\n\n  render() {\n    const {data, corrections, classes} = this.props\n\n    return(\n      <Grid container justify=\"center\" alignItems=\"center\" style={{marginTop: \"30px\"}}>\n      {data.map((quiz, i) => {\n        const marker = (corrections[i] ? <Check style={{color: \"green\"}}/> : <Close style={{color: \"red\"}}/>)\n        return (\n          <ExpansionPanel key={i} className= {classes.panel}>\n            <ExpansionPanelSummary style={{fontWeight: \"500\"}} expandIcon={<ExpandMore />}>\n              {marker}\n              Quiz {i+1}\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails style={{flexDirection: \"column\"}}>\n              <p dangerouslySetInnerHTML={{__html: quiz.question}}/>\n              <p style={{color: \"green\"}}>Correct answer:  {quiz.correct_answer}</p>\n            </ExpansionPanelDetails>\n          </ExpansionPanel>\n        )\n      })}\n\n      </Grid>\n    )\n  }\n}\n\nconst mapState = (state, ownProps) => {\n  const {data, corrections} = state.quiz\n  return {data, corrections}\n}\n\nSummary = withStyles(styles)(Summary)\nexport default connect(mapState)(Summary)\n","import React, { Component } from 'react'\nimport {Typography, Card, Grid, withStyles, LinearProgress, Button} from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions'\nimport SingleQuiz from './SingleQuiz'\nimport Summary from './Summary'\n\nconst styles = {\n  card: {\n    minWidth: 300,\n    minHeight: 240,\n    backgroundColor: '#03a9f4',\n    padding: '1em'\n  },\n  subtitle: {\n    fontSize: '1.2em',\n    color: 'white',\n    textAlign: 'center',\n  },\n  subtitle2: {\n    fontSize: '2em',\n    marginTop: '1.3em',\n    color: '#d32f2f',\n    textShadow: '1px 1px 1px white',\n    textAlign: 'center'\n  },\n  result: {\n    color: '#ffea00',\n    fontSize: '1.2em',\n    textShadow: '1px 1px 1px black'\n  },\n  replay: {\n    marginTop: '2em',\n  },\n  button: {\n    backgroundColor: '#00e676',\n    fontWeight: 'bold',\n    boxShadow: '2px 2px 3px black'\n  }\n}\n\nclass Main extends Component {\n\n  render() {\n    const {data, visibleItem, end, result, amount, classes} = this.props\n      if (!data.length) {return <LinearProgress />}\n      else if (!end) {\n        const singleQuiz = data[visibleItem]\n        const correct_answer = singleQuiz.correct_answer\n        if (singleQuiz.type !== \"boolean\") {\n          const index = Math.floor(Math.random()*3)\n          const answers = Object.assign([], singleQuiz.incorrect_answers)\n          answers.splice(index, 0, correct_answer)\n          singleQuiz['all_answers'] = answers\n        }\n    return (\n    <SingleQuiz data={singleQuiz} correct_answer={correct_answer}/>\n  )\n  } else {\n  return (\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={0} style={{ minHeight: '80vh' }}>\n      <Card className={classes.card}>\n        <Typography className={classes.subtitle} variant=\"display1\" gutterBottom>Your've made <span className={classes.result}>{parseInt(result*100/(amount*10))}%</span> Correct !</Typography>\n        <Typography variant=\"display1\" gutterBottom className={classes.subtitle2}>Play it again ?</Typography>\n        <Grid container justify='center' className={classes.replay}>\n          <Button variant=\"contained\" className={classes.button} onClick={this.props.replay}>Yes</Button>\n        </Grid>\n        <Summary />\n      </Card>\n    </Grid>\n    )\n  }\n  }\n}\n\nconst mapState = (state, ownProps) => {\n  const {data, visibleItem, end, result, amount} = state.quiz\n  return {\n    data,\n    visibleItem,\n    end,\n    result,\n    amount\n  }\n}\n\nconst mapDispatch = dispatch => ({\n  replay: () => dispatch({\n    type: actions.REPLAY_GAME,\n  })\n})\n\nMain = withStyles(styles)(Main)\nexport default connect(mapState, mapDispatch)(Main)\n","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport {Typography, Card, CardHeader, CardContent, withStyles, Button, Grid, Select, MenuItem, InputLabel, FormControl} from '@material-ui/core'\nimport * as actions from '../store/actions'\n\nconst styles = {\n  card: {\n    maxWidth: 400,\n    backgroundColor: '#03a9f4',\n  },\n  subtitle: {\n    fontSize: '1.2em',\n    color: 'white',\n    textAlign: 'center',\n    textShadow: '1px 1px 1px black'\n  },\n  formLabel: {\n    color: 'white'\n  },\n  formControl: {\n    marginBottom: '0.8em'\n  }\n}\n\nclass Welcome extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      category: \"\",\n      difficulty: \"\",\n      amount: 10,\n      clickable: false\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.category !== this.state.category || prevState.difficulty !== this.state.difficulty) {\n    if (this.state.category && this.state.difficulty) {\n      this.setState({\n        clickable: true\n        })\n      }\n    }\n  }\n\n  render () {\n    const { classes } = this.props\n    return (\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={0} style={{ minHeight: '80vh' }}>\n          <Card className={classes.card}>\n            <CardHeader title=\"Welcome to the Trivia Game\" />\n              <CardContent>\n                <Typography className={classes.subtitle} variant=\"display1\" gutterBottom>Set up your game</Typography>\n                  <br />\n                <form autoComplete=\"off\" >\n                  <Grid container direction=\"column\" justify=\"center\" spacing={8}>\n                    <FormControl className={classes.formControl}>\n                      <InputLabel htmlFor=\"category\" className={classes.formLabel}>Category</InputLabel>\n                        <Select\n                          value={this.state.category}\n                          onChange={this.handleChange}\n                          inputProps={{\n                            name: 'category',\n                          }}\n                        >\n                          <MenuItem value=\"\">{\"\"}</MenuItem>\n                          <MenuItem value={9}>General Knowledge</MenuItem>\n                          <MenuItem value={10}>Entertainment: Books</MenuItem>\n                          <MenuItem value={11}>Entertainment: Film</MenuItem>\n                          <MenuItem value={12}>Entertainment: Music</MenuItem>\n                          <MenuItem value={14}>Entertainment: Television</MenuItem>\n                          <MenuItem value={15}>Entertainment: Video Games</MenuItem>\n                          <MenuItem value={16}>Entertainment: Board Games</MenuItem>\n                          <MenuItem value={17}>Science & Nature</MenuItem>\n                          <MenuItem value={18}>Science: Computers</MenuItem>\n                          <MenuItem value={19}>Science: Mathematics</MenuItem>\n                          <MenuItem value={20}>Mythology</MenuItem>\n                          <MenuItem value={21}>Sports</MenuItem>\n                          <MenuItem value={22}>Geography</MenuItem>\n                          <MenuItem value={23}>History</MenuItem>\n                          <MenuItem value={24}>Politics</MenuItem>\n                          <MenuItem value={26}>Celebrities</MenuItem>\n                          <MenuItem value={27}>Animals</MenuItem>\n                        </Select>\n                      </FormControl>\n\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"difficulty\" className={classes.formLabel}>Difficulty</InputLabel>\n                <Select\n                  value={this.state.difficulty}\n                  onChange={this.handleChange}\n                  inputProps={{\n                    name: 'difficulty',\n                  }}\n                >\n                  <MenuItem value=\"\">{\"\"}</MenuItem>\n                  <MenuItem value={\"easy\"}>Easy</MenuItem>\n                  <MenuItem value={\"medium\"}>Medium</MenuItem>\n                  <MenuItem value={\"hard\"}>Hard</MenuItem>\n                </Select>\n            </FormControl>\n\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"amount\" className={classes.formLabel}>Question Numbers</InputLabel>\n              <Select\n                value={this.state.amount}\n                onChange={this.handleChange}\n                inputProps={{\n                  name: 'amount',\n                }}\n              >\n                <MenuItem value={10}>10</MenuItem>\n                <MenuItem value={20}>20</MenuItem>\n                <MenuItem value={30}>30</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n        </form>\n        <Grid container justify=\"center\">\n          {this.state.clickable? (<Button color=\"secondary\" variant=\"contained\" onClick={() => this.props.onSubmit(this.state.category, this.state.difficulty, this.state.amount)}>OK</Button>) : (<Button color=\"secondary\" variant=\"contained\" disabled>OK</Button>)}\n        </Grid>\n      </CardContent>\n    </Card>\n  </Grid>\n    )\n  }\n}\n\nconst mapDispatch = dispatch => ({\n  onSubmit: (category, difficulty, amount) => dispatch({\n    type: actions.LOAD_QUIZ,\n    category: category,\n    difficulty: difficulty,\n    amount: amount\n  })\n})\n\nWelcome = withStyles(styles)(Welcome)\nexport default connect(null, mapDispatch)(Welcome)\n","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport Main from './Main'\nimport Welcome from './Welcome'\n\nclass Game extends Component {\n  render() {\n    const {start} = this.props\n    if (start) {\n      return <Main />\n    }\n    return <Welcome />\n  }\n}\n\nconst mapState = (state, ownProps) => {\n  const {start} = state.quiz\n  return {\n    start\n  }\n}\n\nexport default connect(mapState)(Game)\n","import React from 'react';\nimport createStore from './store'\nimport { Provider } from 'react-redux'\nimport Game from './components/Game'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst store = createStore()\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Game />\n        <ToastContainer />\n      </Provider>\n    );\n  }\n}\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport createSagaMiddleware from 'redux-saga'\nimport sagas from './sagas'\nimport quizReducer from './reducers/Quiz'\n\nexport default () => {\n  const rootReducer = combineReducers({\n    quiz: quizReducer\n  })\n\n  const composeEnhancers = composeWithDevTools({})\n  const sagaMiddleware = createSagaMiddleware()\n  const middlewares = applyMiddleware(sagaMiddleware)\n  const store = createStore(rootReducer, composeEnhancers(middlewares))\n  sagas.forEach(sagaMiddleware.run)\n\n  return store\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}